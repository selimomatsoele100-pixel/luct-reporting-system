{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\luct-reporting-system\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { authService } from '../services/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [backendStatus, setBackendStatus] = useState('checking');\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const checkBackendStatus = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/health');\n      if (response.ok) {\n        setBackendStatus('connected');\n        return true;\n      }\n    } catch (error) {\n      setBackendStatus('disconnected');\n      return false;\n    }\n  };\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n\n      // First check if backend is running\n      const backendReady = await checkBackendStatus();\n      if (!backendReady) {\n        console.warn('Backend server is not running');\n        setLoading(false);\n        return;\n      }\n      const response = await authService.getProfile();\n      setUser(response.data.user);\n      setBackendStatus('connected');\n    } catch (error) {\n      console.error('Auth check failed:', error.message);\n      localStorage.removeItem('token');\n      setBackendStatus('disconnected');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const backendReady = await checkBackendStatus();\n      if (!backendReady) {\n        throw new Error('Backend server is not running. Please start the backend server.');\n      }\n      const response = await authService.login(email, password);\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      setUser(user);\n      setBackendStatus('connected');\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      const backendReady = await checkBackendStatus();\n      if (!backendReady) {\n        throw new Error('Backend server is not running. Please start the backend server.');\n      }\n      const response = await authService.register(userData);\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      setUser(user);\n      setBackendStatus('connected');\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading,\n    backendStatus\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"DoS9Tk2agkS9FQQ0OzIRQWQRZng=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","backendStatus","setBackendStatus","checkAuthStatus","checkBackendStatus","response","fetch","ok","error","token","localStorage","getItem","backendReady","console","warn","getProfile","data","message","removeItem","login","email","password","setItem","register","userData","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/luct-reporting-system/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { authService } from '../services/auth';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [backendStatus, setBackendStatus] = useState('checking');\r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const checkBackendStatus = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/health');\r\n      if (response.ok) {\r\n        setBackendStatus('connected');\r\n        return true;\r\n      }\r\n    } catch (error) {\r\n      setBackendStatus('disconnected');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (!token) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // First check if backend is running\r\n      const backendReady = await checkBackendStatus();\r\n      \r\n      if (!backendReady) {\r\n        console.warn('Backend server is not running');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const response = await authService.getProfile();\r\n      setUser(response.data.user);\r\n      setBackendStatus('connected');\r\n    } catch (error) {\r\n      console.error('Auth check failed:', error.message);\r\n      localStorage.removeItem('token');\r\n      setBackendStatus('disconnected');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const backendReady = await checkBackendStatus();\r\n      if (!backendReady) {\r\n        throw new Error('Backend server is not running. Please start the backend server.');\r\n      }\r\n\r\n      const response = await authService.login(email, password);\r\n      const { token, user } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      setUser(user);\r\n      setBackendStatus('connected');\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const backendReady = await checkBackendStatus();\r\n      if (!backendReady) {\r\n        throw new Error('Backend server is not running. Please start the backend server.');\r\n      }\r\n\r\n      const response = await authService.register(userData);\r\n      const { token, user } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      setUser(user);\r\n      setBackendStatus('connected');\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    register,\r\n    logout,\r\n    loading,\r\n    backendStatus\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}