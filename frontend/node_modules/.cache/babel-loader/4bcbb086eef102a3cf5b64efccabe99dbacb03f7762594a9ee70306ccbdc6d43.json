{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconsole.log('🔗 API Base URL:', API_BASE_URL);\n\n// Create axios instance with better configuration\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 15000,\n  // Increased timeout\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor with logging\napi.interceptors.request.use(config => {\n  var _config$method;\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  console.log(`🔄 API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n  return config;\n}, error => {\n  console.error('❌ Request configuration error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor with enhanced error handling\napi.interceptors.response.use(response => {\n  console.log(`✅ API Success: ${response.status} ${response.config.url}`);\n  return response;\n}, error => {\n  var _error$config, _error$config2, _error$config2$method, _error$response, _error$response2, _error$response3, _error$response4, _error$response4$data, _error$response5, _error$response5$data, _error$response6;\n  const errorDetails = {\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    method: (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : (_error$config2$method = _error$config2.method) === null || _error$config2$method === void 0 ? void 0 : _error$config2$method.toUpperCase(),\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    statusText: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.statusText,\n    message: error.message,\n    code: error.code\n  };\n  console.error('❌ API Error:', errorDetails);\n\n  // Enhanced error handling\n  if (error.code === 'ECONNREFUSED') {\n    error.userMessage = 'Cannot connect to server. Please ensure the backend is running on port 5000.';\n    console.error('💥 Backend server is not accessible!');\n  } else if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 500) {\n    error.userMessage = 'Server error occurred. Please try again later.';\n    console.error('🚨 Server returned 500 error. Check backend logs.');\n  } else if ((_error$response4 = error.response) !== null && _error$response4 !== void 0 && (_error$response4$data = _error$response4.data) !== null && _error$response4$data !== void 0 && _error$response4$data.error) {\n    error.userMessage = error.response.data.error;\n  } else if ((_error$response5 = error.response) !== null && _error$response5 !== void 0 && (_error$response5$data = _error$response5.data) !== null && _error$response5$data !== void 0 && _error$response5$data.message) {\n    error.userMessage = error.response.data.message;\n  } else if (error.message) {\n    error.userMessage = error.message;\n  } else {\n    error.userMessage = 'An unexpected error occurred. Please try again.';\n  }\n\n  // Handle authentication errors\n  if (((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Enhanced API methods with retry logic\nconst createApiWithRetry = (apiCall, maxRetries = 2) => {\n  return async (...args) => {\n    let lastError;\n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\n      try {\n        const result = await apiCall(...args);\n        return result;\n      } catch (error) {\n        lastError = error;\n        console.log(`🔄 Retry attempt ${attempt}/${maxRetries} for ${args[0]}`);\n        if (attempt === maxRetries) break;\n        // Wait before retrying (exponential backoff)\n        await new Promise(resolve => setTimeout(resolve, 1000 * attempt));\n      }\n    }\n    throw lastError;\n  };\n};\nexport const authAPI = {\n  login: createApiWithRetry(credentials => api.post('/auth/login', credentials)),\n  register: createApiWithRetry(userData => api.post('/auth/register', userData)),\n  getInitData: createApiWithRetry(() => api.get('/auth/init-data'))\n};\nexport const reportsAPI = {\n  create: createApiWithRetry(reportData => api.post('/reports', reportData)),\n  getMyReports: createApiWithRetry(() => api.get('/reports/my-reports')),\n  getUnsignedReports: createApiWithRetry(() => api.get('/reports/unsigned')),\n  signReport: createApiWithRetry(reportId => api.put(`/reports/${reportId}/sign`)),\n  getAll: createApiWithRetry(() => api.get('/reports'))\n};\nexport const usersAPI = {\n  getLecturers: createApiWithRetry(() => api.get('/users/lecturers')),\n  getStudents: createApiWithRetry(() => api.get('/users/students')),\n  getClasses: createApiWithRetry(() => api.get('/users/classes')),\n  getCourses: createApiWithRetry(() => api.get('/users/courses')),\n  assignClass: createApiWithRetry(assignmentData => api.post('/users/assign-class', assignmentData))\n};\nexport const complaintsAPI = {\n  create: createApiWithRetry(complaintData => api.post('/complaints', complaintData)),\n  getMyComplaints: createApiWithRetry(() => api.get('/complaints/my-complaints')),\n  getComplaintsForMe: createApiWithRetry(() => api.get('/complaints/for-me')),\n  respond: createApiWithRetry((complaintId, response) => api.put(`/complaints/${complaintId}/respond`, {\n    response\n  })),\n  getAll: createApiWithRetry(() => api.get('/complaints'))\n};\n\n// Enhanced connection testing\nexport const connectionAPI = {\n  health: () => api.get('/health'),\n  testAllEndpoints: async () => {\n    const results = {};\n    try {\n      results.health = await api.get('/health');\n      results.classes = await api.get('/users/classes').catch(e => ({\n        error: e.message\n      }));\n      results.courses = await api.get('/users/courses').catch(e => ({\n        error: e.message\n      }));\n      return results;\n    } catch (error) {\n      console.error('Comprehensive connection test failed:', error);\n      return {\n        error: error.message\n      };\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","console","log","api","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","token","localStorage","getItem","Authorization","method","toUpperCase","url","error","Promise","reject","response","status","_error$config","_error$config2","_error$config2$method","_error$response","_error$response2","_error$response3","_error$response4","_error$response4$data","_error$response5","_error$response5$data","_error$response6","errorDetails","statusText","message","code","userMessage","data","removeItem","window","location","href","createApiWithRetry","apiCall","maxRetries","args","lastError","attempt","result","resolve","setTimeout","authAPI","login","credentials","post","register","userData","getInitData","get","reportsAPI","reportData","getMyReports","getUnsignedReports","signReport","reportId","put","getAll","usersAPI","getLecturers","getStudents","getClasses","getCourses","assignClass","assignmentData","complaintsAPI","complaintData","getMyComplaints","getComplaintsForMe","respond","complaintId","connectionAPI","health","testAllEndpoints","results","classes","catch","e","courses"],"sources":["C:/Users/user/luct-reporting-system/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconsole.log('🔗 API Base URL:', API_BASE_URL);\r\n\r\n// Create axios instance with better configuration\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 15000, // Increased timeout\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor with logging\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    \r\n    console.log(`🔄 API Request: ${config.method?.toUpperCase()} ${config.url}`);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('❌ Request configuration error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor with enhanced error handling\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log(`✅ API Success: ${response.status} ${response.config.url}`);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    const errorDetails = {\r\n      url: error.config?.url,\r\n      method: error.config?.method?.toUpperCase(),\r\n      status: error.response?.status,\r\n      statusText: error.response?.statusText,\r\n      message: error.message,\r\n      code: error.code,\r\n    };\r\n\r\n    console.error('❌ API Error:', errorDetails);\r\n\r\n    // Enhanced error handling\r\n    if (error.code === 'ECONNREFUSED') {\r\n      error.userMessage = 'Cannot connect to server. Please ensure the backend is running on port 5000.';\r\n      console.error('💥 Backend server is not accessible!');\r\n    } \r\n    else if (error.response?.status === 500) {\r\n      error.userMessage = 'Server error occurred. Please try again later.';\r\n      console.error('🚨 Server returned 500 error. Check backend logs.');\r\n    }\r\n    else if (error.response?.data?.error) {\r\n      error.userMessage = error.response.data.error;\r\n    }\r\n    else if (error.response?.data?.message) {\r\n      error.userMessage = error.response.data.message;\r\n    }\r\n    else if (error.message) {\r\n      error.userMessage = error.message;\r\n    }\r\n    else {\r\n      error.userMessage = 'An unexpected error occurred. Please try again.';\r\n    }\r\n\r\n    // Handle authentication errors\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Enhanced API methods with retry logic\r\nconst createApiWithRetry = (apiCall, maxRetries = 2) => {\r\n  return async (...args) => {\r\n    let lastError;\r\n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\r\n      try {\r\n        const result = await apiCall(...args);\r\n        return result;\r\n      } catch (error) {\r\n        lastError = error;\r\n        console.log(`🔄 Retry attempt ${attempt}/${maxRetries} for ${args[0]}`);\r\n        if (attempt === maxRetries) break;\r\n        // Wait before retrying (exponential backoff)\r\n        await new Promise(resolve => setTimeout(resolve, 1000 * attempt));\r\n      }\r\n    }\r\n    throw lastError;\r\n  };\r\n};\r\n\r\nexport const authAPI = {\r\n  login: createApiWithRetry((credentials) => api.post('/auth/login', credentials)),\r\n  register: createApiWithRetry((userData) => api.post('/auth/register', userData)),\r\n  getInitData: createApiWithRetry(() => api.get('/auth/init-data')),\r\n};\r\n\r\nexport const reportsAPI = {\r\n  create: createApiWithRetry((reportData) => api.post('/reports', reportData)),\r\n  getMyReports: createApiWithRetry(() => api.get('/reports/my-reports')),\r\n  getUnsignedReports: createApiWithRetry(() => api.get('/reports/unsigned')),\r\n  signReport: createApiWithRetry((reportId) => api.put(`/reports/${reportId}/sign`)),\r\n  getAll: createApiWithRetry(() => api.get('/reports')),\r\n};\r\n\r\nexport const usersAPI = {\r\n  getLecturers: createApiWithRetry(() => api.get('/users/lecturers')),\r\n  getStudents: createApiWithRetry(() => api.get('/users/students')),\r\n  getClasses: createApiWithRetry(() => api.get('/users/classes')),\r\n  getCourses: createApiWithRetry(() => api.get('/users/courses')),\r\n  assignClass: createApiWithRetry((assignmentData) => api.post('/users/assign-class', assignmentData)),\r\n};\r\n\r\nexport const complaintsAPI = {\r\n  create: createApiWithRetry((complaintData) => api.post('/complaints', complaintData)),\r\n  getMyComplaints: createApiWithRetry(() => api.get('/complaints/my-complaints')),\r\n  getComplaintsForMe: createApiWithRetry(() => api.get('/complaints/for-me')),\r\n  respond: createApiWithRetry((complaintId, response) => api.put(`/complaints/${complaintId}/respond`, { response })),\r\n  getAll: createApiWithRetry(() => api.get('/complaints')),\r\n};\r\n\r\n// Enhanced connection testing\r\nexport const connectionAPI = {\r\n  health: () => api.get('/health'),\r\n  testAllEndpoints: async () => {\r\n    const results = {};\r\n    try {\r\n      results.health = await api.get('/health');\r\n      results.classes = await api.get('/users/classes').catch(e => ({ error: e.message }));\r\n      results.courses = await api.get('/users/courses').catch(e => ({ error: e.message }));\r\n      return results;\r\n    } catch (error) {\r\n      console.error('Comprehensive connection test failed:', error);\r\n      return { error: error.message };\r\n    }\r\n  },\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}