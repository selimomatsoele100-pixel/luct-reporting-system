{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\luct-reporting-system\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  // Mock user data for demonstration\n  const mockUsers = {\n    'lecturer@luct.ac.ls': {\n      id: 1,\n      email: 'lecturer@luct.ac.ls',\n      name: 'Dr. John Smith',\n      role: 'lecturer',\n      faculty: 'FICT',\n      program: 'Information Technology'\n    },\n    'student@luct.ac.ls': {\n      id: 2,\n      email: 'student@luct.ac.ls',\n      name: 'Jane Doe',\n      role: 'student',\n      faculty: 'FICT',\n      program: 'Information Technology',\n      class_id: 1\n    },\n    'prl@luct.ac.ls': {\n      id: 3,\n      email: 'prl@luct.ac.ls',\n      name: 'Prof. David Wilson',\n      role: 'prl',\n      faculty: 'FICT',\n      program: 'Information Technology'\n    },\n    'pl@luct.ac.ls': {\n      id: 4,\n      email: 'pl@luct.ac.ls',\n      name: 'Dr. Sarah Johnson',\n      role: 'pl',\n      faculty: 'FICT',\n      program: 'Information Technology'\n    }\n  };\n  const checkAuthStatus = async () => {\n    try {\n      const userData = localStorage.getItem('user');\n      if (userData) {\n        setUser(JSON.parse(userData));\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n\n      // Mock authentication - in real app, this would be an API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Simple mock validation\n      if (password === 'password' && mockUsers[email]) {\n        const user = mockUsers[email];\n        setUser(user);\n        localStorage.setItem('user', JSON.stringify(user));\n        return {\n          data: {\n            user,\n            token: 'mock-jwt-token'\n          }\n        };\n      } else {\n        throw new Error('Invalid email or password');\n      }\n    } catch (error) {\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async userData => {\n    try {\n      setLoading(true);\n\n      // Mock registration\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      const newUser = {\n        id: Date.now(),\n        ...userData,\n        created_at: new Date().toISOString()\n      };\n      setUser(newUser);\n      localStorage.setItem('user', JSON.stringify(newUser));\n      return {\n        data: {\n          user: newUser,\n          token: 'mock-jwt-token'\n        }\n      };\n    } catch (error) {\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","checkAuthStatus","mockUsers","id","email","name","role","faculty","program","class_id","userData","localStorage","getItem","JSON","parse","error","console","login","password","Promise","resolve","setTimeout","setItem","stringify","data","token","register","newUser","Date","now","created_at","toISOString","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/luct-reporting-system/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  // Mock user data for demonstration\r\n  const mockUsers = {\r\n    'lecturer@luct.ac.ls': {\r\n      id: 1,\r\n      email: 'lecturer@luct.ac.ls',\r\n      name: 'Dr. John Smith',\r\n      role: 'lecturer',\r\n      faculty: 'FICT',\r\n      program: 'Information Technology'\r\n    },\r\n    'student@luct.ac.ls': {\r\n      id: 2,\r\n      email: 'student@luct.ac.ls',\r\n      name: 'Jane Doe',\r\n      role: 'student',\r\n      faculty: 'FICT',\r\n      program: 'Information Technology',\r\n      class_id: 1\r\n    },\r\n    'prl@luct.ac.ls': {\r\n      id: 3,\r\n      email: 'prl@luct.ac.ls',\r\n      name: 'Prof. David Wilson',\r\n      role: 'prl',\r\n      faculty: 'FICT',\r\n      program: 'Information Technology'\r\n    },\r\n    'pl@luct.ac.ls': {\r\n      id: 4,\r\n      email: 'pl@luct.ac.ls',\r\n      name: 'Dr. Sarah Johnson',\r\n      role: 'pl',\r\n      faculty: 'FICT',\r\n      program: 'Information Technology'\r\n    }\r\n  };\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      const userData = localStorage.getItem('user');\r\n      if (userData) {\r\n        setUser(JSON.parse(userData));\r\n      }\r\n    } catch (error) {\r\n      console.error('Auth check failed:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Mock authentication - in real app, this would be an API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Simple mock validation\r\n      if (password === 'password' && mockUsers[email]) {\r\n        const user = mockUsers[email];\r\n        setUser(user);\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        return { data: { user, token: 'mock-jwt-token' } };\r\n      } else {\r\n        throw new Error('Invalid email or password');\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Mock registration\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      const newUser = {\r\n        id: Date.now(),\r\n        ...userData,\r\n        created_at: new Date().toISOString()\r\n      };\r\n      \r\n      setUser(newUser);\r\n      localStorage.setItem('user', JSON.stringify(newUser));\r\n      return { data: { user: newUser, token: 'mock-jwt-token' } };\r\n    } catch (error) {\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    register,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}