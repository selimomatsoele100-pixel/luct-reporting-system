{"ast":null,"code":"import _objectSpread from\"C:/Users/user/luct-reporting-system/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useState,useContext,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{checkAuthStatus();},[]);// Mock user data for demonstration\nconst mockUsers={'lecturer@luct.ac.ls':{id:1,email:'lecturer@luct.ac.ls',name:'Dr. John Smith',role:'lecturer',faculty:'FICT',program:'Information Technology'},'student@luct.ac.ls':{id:2,email:'student@luct.ac.ls',name:'Jane Doe',role:'student',faculty:'FICT',program:'Information Technology',class_id:1},'prl@luct.ac.ls':{id:3,email:'prl@luct.ac.ls',name:'Prof. David Wilson',role:'prl',faculty:'FICT',program:'Information Technology'},'pl@luct.ac.ls':{id:4,email:'pl@luct.ac.ls',name:'Dr. Sarah Johnson',role:'pl',faculty:'FICT',program:'Information Technology'}};const checkAuthStatus=async()=>{try{const userData=localStorage.getItem('user');if(userData){setUser(JSON.parse(userData));}}catch(error){console.error('Auth check failed:',error);}finally{setLoading(false);}};const login=async(email,password)=>{try{setLoading(true);// Mock authentication - in real app, this would be an API call\nawait new Promise(resolve=>setTimeout(resolve,1000));// Simple mock validation\nif(password==='password'&&mockUsers[email]){const user=mockUsers[email];setUser(user);localStorage.setItem('user',JSON.stringify(user));return{data:{user,token:'mock-jwt-token'}};}else{throw new Error('Invalid email or password');}}catch(error){throw error;}finally{setLoading(false);}};const register=async userData=>{try{setLoading(true);// Mock registration\nawait new Promise(resolve=>setTimeout(resolve,1000));const newUser=_objectSpread(_objectSpread({id:Date.now()},userData),{},{created_at:new Date().toISOString()});setUser(newUser);localStorage.setItem('user',JSON.stringify(newUser));return{data:{user:newUser,token:'mock-jwt-token'}};}catch(error){throw error;}finally{setLoading(false);}};const logout=()=>{localStorage.removeItem('user');setUser(null);};const value={user,login,register,logout,loading};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","checkAuthStatus","mockUsers","id","email","name","role","faculty","program","class_id","userData","localStorage","getItem","JSON","parse","error","console","login","password","Promise","resolve","setTimeout","setItem","stringify","data","token","register","newUser","_objectSpread","Date","now","created_at","toISOString","logout","removeItem","value","Provider"],"sources":["C:/Users/user/luct-reporting-system/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  // Mock user data for demonstration\r\n  const mockUsers = {\r\n    'lecturer@luct.ac.ls': {\r\n      id: 1,\r\n      email: 'lecturer@luct.ac.ls',\r\n      name: 'Dr. John Smith',\r\n      role: 'lecturer',\r\n      faculty: 'FICT',\r\n      program: 'Information Technology'\r\n    },\r\n    'student@luct.ac.ls': {\r\n      id: 2,\r\n      email: 'student@luct.ac.ls',\r\n      name: 'Jane Doe',\r\n      role: 'student',\r\n      faculty: 'FICT',\r\n      program: 'Information Technology',\r\n      class_id: 1\r\n    },\r\n    'prl@luct.ac.ls': {\r\n      id: 3,\r\n      email: 'prl@luct.ac.ls',\r\n      name: 'Prof. David Wilson',\r\n      role: 'prl',\r\n      faculty: 'FICT',\r\n      program: 'Information Technology'\r\n    },\r\n    'pl@luct.ac.ls': {\r\n      id: 4,\r\n      email: 'pl@luct.ac.ls',\r\n      name: 'Dr. Sarah Johnson',\r\n      role: 'pl',\r\n      faculty: 'FICT',\r\n      program: 'Information Technology'\r\n    }\r\n  };\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      const userData = localStorage.getItem('user');\r\n      if (userData) {\r\n        setUser(JSON.parse(userData));\r\n      }\r\n    } catch (error) {\r\n      console.error('Auth check failed:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Mock authentication - in real app, this would be an API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Simple mock validation\r\n      if (password === 'password' && mockUsers[email]) {\r\n        const user = mockUsers[email];\r\n        setUser(user);\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        return { data: { user, token: 'mock-jwt-token' } };\r\n      } else {\r\n        throw new Error('Invalid email or password');\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Mock registration\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      const newUser = {\r\n        id: Date.now(),\r\n        ...userData,\r\n        created_at: new Date().toISOString()\r\n      };\r\n      \r\n      setUser(newUser);\r\n      localStorage.setItem('user', JSON.stringify(newUser));\r\n      return { data: { user: newUser, token: 'mock-jwt-token' } };\r\n    } catch (error) {\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    register,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}