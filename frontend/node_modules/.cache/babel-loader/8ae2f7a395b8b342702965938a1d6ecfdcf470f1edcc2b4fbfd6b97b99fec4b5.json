{"ast":null,"code":"// Mock API service - no actual backend calls\nconst api = {\n  get: async url => {\n    console.log(`ðŸ”„ Mock API GET: ${url}`);\n    await new Promise(resolve => setTimeout(resolve, 500));\n\n    // Mock responses based on endpoint\n    if (url === '/courses') {\n      return {\n        data: [{\n          id: 1,\n          course_code: 'DIWA2110',\n          course_name: 'Web Application Development',\n          faculty: 'FICT'\n        }, {\n          id: 2,\n          course_code: 'DIDB2110',\n          course_name: 'Database Systems',\n          faculty: 'FICT'\n        }, {\n          id: 3,\n          course_code: 'DIPR2110',\n          course_name: 'Programming Fundamentals',\n          faculty: 'FICT'\n        }]\n      };\n    }\n    if (url === '/courses/classes') {\n      return {\n        data: [{\n          id: 1,\n          class_name: 'DIT-1A',\n          faculty: 'FICT',\n          program: 'Diploma in IT'\n        }, {\n          id: 2,\n          class_name: 'BIT-2B',\n          faculty: 'FICT',\n          program: 'BSc in IT'\n        }, {\n          id: 3,\n          class_name: 'BBIT-1C',\n          faculty: 'FICT',\n          program: 'BSc in Business IT'\n        }]\n      };\n    }\n    if (url === '/complaints/my-complaints') {\n      return {\n        data: []\n      };\n    }\n    if (url === '/reports/my-reports') {\n      return {\n        data: []\n      };\n    }\n    if (url === '/reports/all') {\n      return {\n        data: []\n      };\n    }\n    return {\n      data: []\n    };\n  },\n  post: async (url, data) => {\n    console.log(`ðŸ”„ Mock API POST: ${url}`, data);\n    await new Promise(resolve => setTimeout(resolve, 500));\n    if (url === '/reports') {\n      return {\n        data: {\n          report: {\n            id: Date.now(),\n            ...data,\n            created_at: new Date().toISOString(),\n            status: 'pending'\n          }\n        }\n      };\n    }\n    return {\n      data: {\n        success: true\n      }\n    };\n  },\n  put: async (url, data) => {\n    console.log(`ðŸ”„ Mock API PUT: ${url}`, data);\n    await new Promise(resolve => setTimeout(resolve, 500));\n    return {\n      data: {\n        success: true\n      }\n    };\n  },\n  delete: async url => {\n    console.log(`ðŸ”„ Mock API DELETE: ${url}`);\n    await new Promise(resolve => setTimeout(resolve, 500));\n    return {\n      data: {\n        success: true\n      }\n    };\n  }\n};\nexport default api;","map":{"version":3,"names":["api","get","url","console","log","Promise","resolve","setTimeout","data","id","course_code","course_name","faculty","class_name","program","post","report","Date","now","created_at","toISOString","status","success","put","delete"],"sources":["C:/Users/user/luct-reporting-system/frontend/src/services/api.js"],"sourcesContent":["// Mock API service - no actual backend calls\r\nconst api = {\r\n  get: async (url) => {\r\n    console.log(`ðŸ”„ Mock API GET: ${url}`);\r\n    await new Promise(resolve => setTimeout(resolve, 500));\r\n    \r\n    // Mock responses based on endpoint\r\n    if (url === '/courses') {\r\n      return {\r\n        data: [\r\n          { id: 1, course_code: 'DIWA2110', course_name: 'Web Application Development', faculty: 'FICT' },\r\n          { id: 2, course_code: 'DIDB2110', course_name: 'Database Systems', faculty: 'FICT' },\r\n          { id: 3, course_code: 'DIPR2110', course_name: 'Programming Fundamentals', faculty: 'FICT' }\r\n        ]\r\n      };\r\n    }\r\n    \r\n    if (url === '/courses/classes') {\r\n      return {\r\n        data: [\r\n          { id: 1, class_name: 'DIT-1A', faculty: 'FICT', program: 'Diploma in IT' },\r\n          { id: 2, class_name: 'BIT-2B', faculty: 'FICT', program: 'BSc in IT' },\r\n          { id: 3, class_name: 'BBIT-1C', faculty: 'FICT', program: 'BSc in Business IT' }\r\n        ]\r\n      };\r\n    }\r\n    \r\n    if (url === '/complaints/my-complaints') {\r\n      return { data: [] };\r\n    }\r\n    \r\n    if (url === '/reports/my-reports') {\r\n      return { data: [] };\r\n    }\r\n    \r\n    if (url === '/reports/all') {\r\n      return { data: [] };\r\n    }\r\n    \r\n    return { data: [] };\r\n  },\r\n  \r\n  post: async (url, data) => {\r\n    console.log(`ðŸ”„ Mock API POST: ${url}`, data);\r\n    await new Promise(resolve => setTimeout(resolve, 500));\r\n    \r\n    if (url === '/reports') {\r\n      return {\r\n        data: {\r\n          report: {\r\n            id: Date.now(),\r\n            ...data,\r\n            created_at: new Date().toISOString(),\r\n            status: 'pending'\r\n          }\r\n        }\r\n      };\r\n    }\r\n    \r\n    return { data: { success: true } };\r\n  },\r\n  \r\n  put: async (url, data) => {\r\n    console.log(`ðŸ”„ Mock API PUT: ${url}`, data);\r\n    await new Promise(resolve => setTimeout(resolve, 500));\r\n    return { data: { success: true } };\r\n  },\r\n  \r\n  delete: async (url) => {\r\n    console.log(`ðŸ”„ Mock API DELETE: ${url}`);\r\n    await new Promise(resolve => setTimeout(resolve, 500));\r\n    return { data: { success: true } };\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}