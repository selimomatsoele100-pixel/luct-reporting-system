{"ast":null,"code":"import axios from 'axios';\n\n// Try different ports if 5000 is not working\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconsole.log('üîó API Base URL:', API_BASE_URL);\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 5000\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  var _config$method;\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  console.log(`üîÑ API Call: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n  return config;\n}, error => {\n  console.error('‚ùå Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  console.log(`‚úÖ API Success: ${response.config.url}`, response.status);\n  return response;\n}, error => {\n  var _error$config, _error$config2, _error$response, _error$response2;\n  console.error('‚ùå API Error:', {\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    method: (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.method,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    message: error.message,\n    code: error.code\n  });\n  if (error.code === 'ECONNREFUSED') {\n    console.error('üí• Backend server is not running!');\n    alert('Backend server is not running. Please start the backend server on port 5000.');\n  }\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData),\n  getInitData: () => api.get('/auth/init-data')\n};\nexport const reportsAPI = {\n  create: reportData => api.post('/reports', reportData),\n  getMyReports: () => api.get('/reports/my-reports'),\n  getUnsignedReports: () => api.get('/reports/unsigned'),\n  signReport: reportId => api.put(`/reports/${reportId}/sign`),\n  getAll: () => api.get('/reports')\n};\nexport const usersAPI = {\n  getLecturers: () => api.get('/users/lecturers'),\n  getStudents: () => api.get('/users/students'),\n  getClasses: () => api.get('/users/classes'),\n  getCourses: () => api.get('/users/courses'),\n  assignClass: assignmentData => api.post('/users/assign-class', assignmentData)\n};\nexport const complaintsAPI = {\n  create: complaintData => api.post('/complaints', complaintData),\n  getMyComplaints: () => api.get('/complaints/my-complaints'),\n  getComplaintsForMe: () => api.get('/complaints/for-me'),\n  respond: (complaintId, response) => api.put(`/complaints/${complaintId}/respond`, {\n    response\n  }),\n  getAll: () => api.get('/complaints')\n};\n\n// Test connection\nexport const testConnection = async () => {\n  try {\n    console.log('üß™ Testing backend connection...');\n    const response = await api.get('/health');\n    console.log('‚úÖ Backend is running:', response.data);\n    return true;\n  } catch (error) {\n    console.error('‚ùå Backend connection failed:', error.message);\n    return false;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","console","log","api","create","baseURL","timeout","interceptors","request","use","config","_config$method","token","localStorage","getItem","headers","Authorization","method","toUpperCase","url","error","Promise","reject","response","status","_error$config","_error$config2","_error$response","_error$response2","message","code","alert","removeItem","window","location","href","authAPI","login","credentials","post","register","userData","getInitData","get","reportsAPI","reportData","getMyReports","getUnsignedReports","signReport","reportId","put","getAll","usersAPI","getLecturers","getStudents","getClasses","getCourses","assignClass","assignmentData","complaintsAPI","complaintData","getMyComplaints","getComplaintsForMe","respond","complaintId","testConnection","data"],"sources":["C:/Users/user/luct-reporting-system/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Try different ports if 5000 is not working\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconsole.log('üîó API Base URL:', API_BASE_URL);\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 5000,\r\n});\r\n\r\n// Request interceptor\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  console.log(`üîÑ API Call: ${config.method?.toUpperCase()} ${config.url}`);\r\n  return config;\r\n}, (error) => {\r\n  console.error('‚ùå Request Error:', error);\r\n  return Promise.reject(error);\r\n});\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log(`‚úÖ API Success: ${response.config.url}`, response.status);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('‚ùå API Error:', {\r\n      url: error.config?.url,\r\n      method: error.config?.method,\r\n      status: error.response?.status,\r\n      message: error.message,\r\n      code: error.code\r\n    });\r\n    \r\n    if (error.code === 'ECONNREFUSED') {\r\n      console.error('üí• Backend server is not running!');\r\n      alert('Backend server is not running. Please start the backend server on port 5000.');\r\n    }\r\n    \r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const authAPI = {\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  getInitData: () => api.get('/auth/init-data'),\r\n};\r\n\r\nexport const reportsAPI = {\r\n  create: (reportData) => api.post('/reports', reportData),\r\n  getMyReports: () => api.get('/reports/my-reports'),\r\n  getUnsignedReports: () => api.get('/reports/unsigned'),\r\n  signReport: (reportId) => api.put(`/reports/${reportId}/sign`),\r\n  getAll: () => api.get('/reports'),\r\n};\r\n\r\nexport const usersAPI = {\r\n  getLecturers: () => api.get('/users/lecturers'),\r\n  getStudents: () => api.get('/users/students'),\r\n  getClasses: () => api.get('/users/classes'),\r\n  getCourses: () => api.get('/users/courses'),\r\n  assignClass: (assignmentData) => api.post('/users/assign-class', assignmentData),\r\n};\r\n\r\nexport const complaintsAPI = {\r\n  create: (complaintData) => api.post('/complaints', complaintData),\r\n  getMyComplaints: () => api.get('/complaints/my-complaints'),\r\n  getComplaintsForMe: () => api.get('/complaints/for-me'),\r\n  respond: (complaintId, response) => api.put(`/complaints/${complaintId}/respond`, { response }),\r\n  getAll: () => api.get('/complaints'),\r\n};\r\n\r\n// Test connection\r\nexport const testConnection = async () => {\r\n  try {\r\n    console.log('üß™ Testing backend connection...');\r\n    const response = await api.get('/health');\r\n    console.log('‚úÖ Backend is running:', response.data);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('‚ùå Backend connection failed:', error.message);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}