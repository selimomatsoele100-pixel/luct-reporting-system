{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\nconsole.log('API Base URL:', API_BASE_URL); // Debug log\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 15000,\n  // Increased timeout\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  var _config$method;\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  console.log(`üîÑ API Call: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`); // Debug log\n  return config;\n}, error => {\n  console.error('‚ùå Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  console.log(`‚úÖ API Success: ${response.config.url}`, response.status);\n  return response;\n}, error => {\n  var _error$config, _error$config2, _error$response, _error$response2;\n  console.error('‚ùå API Error:', {\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    method: (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.method,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    message: error.message\n  });\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n\n  // Handle connection refused errors\n  if (error.code === 'ECONNREFUSED' || error.message.includes('NETWORK_ERROR')) {\n    console.error('üö® Backend server is not running!');\n    alert('Backend server is not running. Please start the backend server on port 5001.');\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","console","log","api","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","token","localStorage","getItem","Authorization","method","toUpperCase","url","error","Promise","reject","response","status","_error$config","_error$config2","_error$response","_error$response2","message","removeItem","window","location","href","code","includes","alert"],"sources":["C:/Users/user/luct-reporting-system/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\r\n\r\nconsole.log('API Base URL:', API_BASE_URL); // Debug log\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 15000, // Increased timeout\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n});\r\n\r\n// Request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    \r\n    console.log(`üîÑ API Call: ${config.method?.toUpperCase()} ${config.url}`); // Debug log\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('‚ùå Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log(`‚úÖ API Success: ${response.config.url}`, response.status);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('‚ùå API Error:', {\r\n      url: error.config?.url,\r\n      method: error.config?.method,\r\n      status: error.response?.status,\r\n      message: error.message\r\n    });\r\n    \r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    \r\n    // Handle connection refused errors\r\n    if (error.code === 'ECONNREFUSED' || error.message.includes('NETWORK_ERROR')) {\r\n      console.error('üö® Backend server is not running!');\r\n      alert('Backend server is not running. Please start the backend server on port 5001.');\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjFC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,YAAY,CAAC,CAAC,CAAC;;AAE5C,MAAMM,GAAG,GAAGP,KAAK,CAACQ,MAAM,CAAC;EACvBC,OAAO,EAAER,YAAY;EACrBS,OAAO,EAAE,KAAK;EAAE;EAChBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EAAA,IAAAC,cAAA;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTF,MAAM,CAACJ,OAAO,CAACS,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EAEAZ,OAAO,CAACC,GAAG,CAAC,iBAAAU,cAAA,GAAgBD,MAAM,CAACM,MAAM,cAAAL,cAAA,uBAAbA,cAAA,CAAeM,WAAW,CAAC,CAAC,IAAIP,MAAM,CAACQ,GAAG,EAAE,CAAC,CAAC,CAAC;EAC3E,OAAOR,MAAM;AACf,CAAC,EACAS,KAAK,IAAK;EACTnB,OAAO,CAACmB,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;EACxC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAjB,GAAG,CAACK,YAAY,CAACe,QAAQ,CAACb,GAAG,CAC1Ba,QAAQ,IAAK;EACZtB,OAAO,CAACC,GAAG,CAAC,kBAAkBqB,QAAQ,CAACZ,MAAM,CAACQ,GAAG,EAAE,EAAEI,QAAQ,CAACC,MAAM,CAAC;EACrE,OAAOD,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAK,aAAA,EAAAC,cAAA,EAAAC,eAAA,EAAAC,gBAAA;EACT3B,OAAO,CAACmB,KAAK,CAAC,cAAc,EAAE;IAC5BD,GAAG,GAAAM,aAAA,GAAEL,KAAK,CAACT,MAAM,cAAAc,aAAA,uBAAZA,aAAA,CAAcN,GAAG;IACtBF,MAAM,GAAAS,cAAA,GAAEN,KAAK,CAACT,MAAM,cAAAe,cAAA,uBAAZA,cAAA,CAAcT,MAAM;IAC5BO,MAAM,GAAAG,eAAA,GAAEP,KAAK,CAACG,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBH,MAAM;IAC9BK,OAAO,EAAET,KAAK,CAACS;EACjB,CAAC,CAAC;EAEF,IAAI,EAAAD,gBAAA,GAAAR,KAAK,CAACG,QAAQ,cAAAK,gBAAA,uBAAdA,gBAAA,CAAgBJ,MAAM,MAAK,GAAG,EAAE;IAClCV,YAAY,CAACgB,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;;EAEA;EACA,IAAIb,KAAK,CAACc,IAAI,KAAK,cAAc,IAAId,KAAK,CAACS,OAAO,CAACM,QAAQ,CAAC,eAAe,CAAC,EAAE;IAC5ElC,OAAO,CAACmB,KAAK,CAAC,mCAAmC,CAAC;IAClDgB,KAAK,CAAC,8EAA8E,CAAC;EACvF;EAEA,OAAOf,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAejB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}